/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/produtos/[codigo]/imagens/route";
exports.ids = ["app/api/produtos/[codigo]/imagens/route"];
exports.modules = {

/***/ "(rsc)/./app/api/produtos/[codigo]/imagens/route.ts":
/*!****************************************************!*\
  !*** ./app/api/produtos/[codigo]/imagens/route.ts ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DELETE: () => (/* binding */ DELETE),\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   PATCH: () => (/* binding */ PATCH),\n/* harmony export */   POST: () => (/* binding */ POST),\n/* harmony export */   PUT: () => (/* binding */ PUT),\n/* harmony export */   dynamic: () => (/* binding */ dynamic)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var sharp__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! sharp */ \"sharp\");\n/* harmony import */ var sharp__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(sharp__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\nconst MAX_IMAGES = 4;\n// Salva dentro de public/upload para servir estaticamente via /upload/...\nconst UPLOAD_DIR = path__WEBPACK_IMPORTED_MODULE_2___default().join(process.cwd(), 'public', 'upload');\nconst MAX_FILE_SIZE = 10 * 1024 * 1024 // 10MB\n;\nconst ALLOWED_MIME = [\n    'image/png',\n    'image/jpeg',\n    'image/jpg',\n    'image/webp'\n];\nasync function ensureDir() {\n    await fs__WEBPACK_IMPORTED_MODULE_1__.promises.mkdir(UPLOAD_DIR, {\n        recursive: true\n    });\n}\nfunction buildFileName(codigo, position) {\n    return position === 1 ? `${codigo}.png` : `${codigo}_${position}.png`;\n}\nfunction buildThumbName(main) {\n    return main.replace(/\\.png$/i, '_thumb.png');\n}\nasync function listImages(codigo) {\n    try {\n        const files = await fs__WEBPACK_IMPORTED_MODULE_1__.promises.readdir(UPLOAD_DIR);\n        const prefix = `${codigo}`;\n        const filtered = files.filter((f)=>f.startsWith(prefix) && f.endsWith('.png') && !f.endsWith('_thumb.png')).map((f)=>{\n            const m = f.match(/^(\\d+)(?:_(\\d+))?\\.png$/);\n            const pos = m && m[2] ? parseInt(m[2], 10) : 1;\n            return {\n                file: f,\n                pos\n            };\n        }).sort((a, b)=>a.pos - b.pos);\n        return filtered.map((i)=>({\n                name: i.file,\n                url: `/upload/${i.file}`,\n                pos: i.pos\n            }));\n    } catch  {\n        return [];\n    }\n}\nasync function GET(_req, { params }) {\n    await ensureDir();\n    const imgs = await listImages(params.codigo);\n    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n        success: true,\n        imagens: imgs\n    });\n}\n// Upload nova imagem (multipart/form-data) campos: file, crop (json opcional com {x,y,w,h,scale})\nasync function POST(req, { params }) {\n    const codigo = params.codigo;\n    await ensureDir();\n    try {\n        const formData = await req.formData();\n        const file = formData.get('file');\n        if (!file) return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: 'Arquivo ausente'\n        }, {\n            status: 400\n        });\n        if (file.size > MAX_FILE_SIZE) return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: 'Arquivo excede 10MB'\n        }, {\n            status: 400\n        });\n        if (!ALLOWED_MIME.includes(file.type)) return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: 'Formato inválido'\n        }, {\n            status: 400\n        });\n        const cropRaw = formData.get('crop');\n        let crop = null;\n        if (cropRaw) {\n            try {\n                crop = JSON.parse(cropRaw);\n            } catch  {}\n        }\n        const buff = Buffer.from(await file.arrayBuffer());\n        // Determinar próxima posição\n        const existing = await listImages(codigo);\n        if (existing.length >= MAX_IMAGES) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: 'Limite máximo de 4 imagens'\n            }, {\n                status: 400\n            });\n        }\n        const nextPos = existing.length + 1;\n        const filename = buildFileName(codigo, nextPos);\n        let img = sharp__WEBPACK_IMPORTED_MODULE_3___default()(buff);\n        const meta = await img.metadata();\n        if (crop && crop.w && crop.h) {\n            const x = Math.max(0, Math.min(crop.x || 0, meta.width || 0));\n            const y = Math.max(0, Math.min(crop.y || 0, meta.height || 0));\n            const w = Math.min(crop.w, meta.width || crop.w);\n            const h = Math.min(crop.h, meta.height || crop.h);\n            img = img.extract({\n                left: Math.round(x),\n                top: Math.round(y),\n                width: Math.round(w),\n                height: Math.round(h)\n            });\n        }\n        if (crop && crop.scale && crop.scale !== 1) {\n            img = img.resize({\n                width: Math.round((meta.width || 0) * crop.scale) || undefined\n            });\n        }\n        const outPath = path__WEBPACK_IMPORTED_MODULE_2___default().join(UPLOAD_DIR, filename);\n        await img.png({\n            compressionLevel: 9\n        }).toFile(outPath);\n        // Gerar thumbnail 300px (manter proporção) se maior\n        try {\n            const thumbPath = path__WEBPACK_IMPORTED_MODULE_2___default().join(UPLOAD_DIR, buildThumbName(filename));\n            await sharp__WEBPACK_IMPORTED_MODULE_3___default()(outPath).resize({\n                width: 300,\n                withoutEnlargement: true\n            }).png({\n                compressionLevel: 9\n            }).toFile(thumbPath);\n        } catch (e) {\n            console.warn('Falha gerar thumbnail', e);\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            file: filename,\n            pos: nextPos\n        });\n    } catch (e) {\n        console.error('UPLOAD ERRO', e);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: 'Falha upload',\n            detalhe: e.message\n        }, {\n            status: 500\n        });\n    }\n}\n// Reordenar: body { ordem: [\"200.png\",\"200_2.png\", ...] }\nasync function PUT(req, { params }) {\n    const codigo = params.codigo;\n    await ensureDir();\n    try {\n        const body = await req.json();\n        const ordem = body?.ordem || [];\n        if (!Array.isArray(ordem) || !ordem.length) return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: 'Lista vazia'\n        }, {\n            status: 400\n        });\n        // Filtrar somente deste produto\n        const valid = ordem.filter((n)=>n.startsWith(codigo));\n        const pairs = [];\n        let pos = 1;\n        for (const original of valid){\n            const finalName = buildFileName(codigo, pos);\n            if (original !== finalName) {\n                const tempName = `${original}.reorder_tmp` // garantir unicidade\n                ;\n                // rename original -> temp\n                try {\n                    await fs__WEBPACK_IMPORTED_MODULE_1__.promises.rename(path__WEBPACK_IMPORTED_MODULE_2___default().join(UPLOAD_DIR, original), path__WEBPACK_IMPORTED_MODULE_2___default().join(UPLOAD_DIR, tempName));\n                    // thumbnail temp\n                    const origThumb = path__WEBPACK_IMPORTED_MODULE_2___default().join(UPLOAD_DIR, buildThumbName(original));\n                    try {\n                        await fs__WEBPACK_IMPORTED_MODULE_1__.promises.stat(origThumb);\n                        await fs__WEBPACK_IMPORTED_MODULE_1__.promises.rename(origThumb, path__WEBPACK_IMPORTED_MODULE_2___default().join(UPLOAD_DIR, buildThumbName(tempName)));\n                    } catch  {}\n                    pairs.push({\n                        temp: tempName,\n                        final: finalName,\n                        original\n                    });\n                } catch (e) {\n                    console.warn('fase1 reorder rename falhou', original, e);\n                }\n            }\n            pos++;\n        }\n        // Segunda fase: temp -> final\n        for (const p of pairs){\n            try {\n                await fs__WEBPACK_IMPORTED_MODULE_1__.promises.rename(path__WEBPACK_IMPORTED_MODULE_2___default().join(UPLOAD_DIR, p.temp), path__WEBPACK_IMPORTED_MODULE_2___default().join(UPLOAD_DIR, p.final));\n                const tempThumb = path__WEBPACK_IMPORTED_MODULE_2___default().join(UPLOAD_DIR, buildThumbName(p.temp));\n                try {\n                    await fs__WEBPACK_IMPORTED_MODULE_1__.promises.stat(tempThumb);\n                    await fs__WEBPACK_IMPORTED_MODULE_1__.promises.rename(tempThumb, path__WEBPACK_IMPORTED_MODULE_2___default().join(UPLOAD_DIR, buildThumbName(p.final)));\n                } catch  {}\n            } catch (e) {\n                console.warn('fase2 reorder rename falhou', p, e);\n            }\n        }\n        const imagens = await listImages(codigo);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            imagens\n        });\n    } catch (e) {\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: 'Falha reorder',\n            detalhe: e.message\n        }, {\n            status: 500\n        });\n    }\n}\n// DELETE ?nome=200_2.png\nasync function DELETE(req, { params }) {\n    const codigo = params.codigo;\n    await ensureDir();\n    const { searchParams } = new URL(req.url);\n    const nome = searchParams.get('nome');\n    if (!nome) return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n        success: false,\n        error: 'Param nome ausente'\n    }, {\n        status: 400\n    });\n    if (!nome.startsWith(codigo)) return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n        success: false,\n        error: 'Arquivo não pertence ao produto'\n    }, {\n        status: 400\n    });\n    try {\n        await fs__WEBPACK_IMPORTED_MODULE_1__.promises.unlink(path__WEBPACK_IMPORTED_MODULE_2___default().join(UPLOAD_DIR, nome));\n        // Apagar thumbnail associado\n        try {\n            await fs__WEBPACK_IMPORTED_MODULE_1__.promises.unlink(path__WEBPACK_IMPORTED_MODULE_2___default().join(UPLOAD_DIR, buildThumbName(nome)));\n        } catch  {}\n    } catch (e) {\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: 'Arquivo não encontrado'\n        }, {\n            status: 404\n        });\n    }\n    // Recompactar ordem para evitar buracos\n    const imgs = await listImages(codigo);\n    // Renomear em sequência\n    // Compactação segura pós exclusão\n    let pos = 1;\n    const compPairs = [];\n    for (const img of imgs){\n        const finalName = buildFileName(codigo, pos);\n        if (img.name !== finalName) {\n            const tempName = `${img.name}.compact_tmp`;\n            try {\n                await fs__WEBPACK_IMPORTED_MODULE_1__.promises.rename(path__WEBPACK_IMPORTED_MODULE_2___default().join(UPLOAD_DIR, img.name), path__WEBPACK_IMPORTED_MODULE_2___default().join(UPLOAD_DIR, tempName));\n                const oldThumb = path__WEBPACK_IMPORTED_MODULE_2___default().join(UPLOAD_DIR, buildThumbName(img.name));\n                try {\n                    await fs__WEBPACK_IMPORTED_MODULE_1__.promises.stat(oldThumb);\n                    await fs__WEBPACK_IMPORTED_MODULE_1__.promises.rename(oldThumb, path__WEBPACK_IMPORTED_MODULE_2___default().join(UPLOAD_DIR, buildThumbName(tempName)));\n                } catch  {}\n                compPairs.push({\n                    temp: tempName,\n                    final: finalName\n                });\n            } catch (e) {\n                console.warn('compact fase1 falhou', img.name, e);\n            }\n        }\n        pos++;\n    }\n    for (const p of compPairs){\n        try {\n            await fs__WEBPACK_IMPORTED_MODULE_1__.promises.rename(path__WEBPACK_IMPORTED_MODULE_2___default().join(UPLOAD_DIR, p.temp), path__WEBPACK_IMPORTED_MODULE_2___default().join(UPLOAD_DIR, p.final));\n            const tThumb = path__WEBPACK_IMPORTED_MODULE_2___default().join(UPLOAD_DIR, buildThumbName(p.temp));\n            try {\n                await fs__WEBPACK_IMPORTED_MODULE_1__.promises.stat(tThumb);\n                await fs__WEBPACK_IMPORTED_MODULE_1__.promises.rename(tThumb, path__WEBPACK_IMPORTED_MODULE_2___default().join(UPLOAD_DIR, buildThumbName(p.final)));\n            } catch  {}\n        } catch (e) {\n            console.warn('compact fase2 falhou', p, e);\n        }\n    }\n    const finalList = await listImages(codigo);\n    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n        success: true,\n        imagens: finalList\n    });\n}\nconst dynamic = 'force-dynamic';\n// PATCH: swap positions { acao:'swap', from: number, to: number }\nasync function PATCH(req, { params }) {\n    const codigo = params.codigo;\n    console.log('🔄 API SWAP DEBUG - Recebendo PATCH para código:', codigo);\n    await ensureDir();\n    try {\n        const body = await req.json();\n        console.log('🔄 API SWAP DEBUG - Body recebido:', body);\n        if (body?.acao !== 'swap') return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: 'Ação inválida'\n        }, {\n            status: 400\n        });\n        const from = parseInt(body.from, 10);\n        const to = parseInt(body.to, 10);\n        console.log('🔄 API SWAP DEBUG - Posições:', {\n            from,\n            to\n        });\n        if (!from || !to || from === to) return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: 'Parâmetros inválidos'\n        }, {\n            status: 400\n        });\n        if (from < 1 || to < 1 || from > MAX_IMAGES || to > MAX_IMAGES) return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: 'Fora do limite'\n        }, {\n            status: 400\n        });\n        const fileFrom = buildFileName(codigo, from);\n        const fileTo = buildFileName(codigo, to);\n        const pathFrom = path__WEBPACK_IMPORTED_MODULE_2___default().join(UPLOAD_DIR, fileFrom);\n        const pathTo = path__WEBPACK_IMPORTED_MODULE_2___default().join(UPLOAD_DIR, fileTo);\n        console.log('🔄 API SWAP DEBUG - Arquivos:', {\n            fileFrom,\n            fileTo,\n            pathFrom,\n            pathTo\n        });\n        // Verificar existência\n        try {\n            await fs__WEBPACK_IMPORTED_MODULE_1__.promises.stat(pathFrom);\n            console.log('🔄 API SWAP DEBUG - Arquivo FROM existe');\n        } catch  {\n            console.log('❌ API SWAP DEBUG - Arquivo FROM não existe');\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: 'Origem inexistente'\n            }, {\n                status: 404\n            });\n        }\n        try {\n            await fs__WEBPACK_IMPORTED_MODULE_1__.promises.stat(pathTo);\n            console.log('🔄 API SWAP DEBUG - Arquivo TO existe');\n        } catch  {\n            console.log('❌ API SWAP DEBUG - Arquivo TO não existe');\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: 'Destino inexistente'\n            }, {\n                status: 404\n            });\n        }\n        const temp = `${fileFrom}.swap_tmp`;\n        const tempPath = path__WEBPACK_IMPORTED_MODULE_2___default().join(UPLOAD_DIR, temp);\n        console.log('🔄 API SWAP DEBUG - Iniciando swap com temp:', temp);\n        // swap principal\n        await fs__WEBPACK_IMPORTED_MODULE_1__.promises.rename(pathFrom, tempPath);\n        await fs__WEBPACK_IMPORTED_MODULE_1__.promises.rename(pathTo, pathFrom);\n        await fs__WEBPACK_IMPORTED_MODULE_1__.promises.rename(tempPath, pathTo);\n        console.log('✅ API SWAP DEBUG - Swap principal concluído');\n        // swap thumbs se existirem\n        const thumbFrom = buildThumbName(fileFrom);\n        const thumbTo = buildThumbName(fileTo);\n        const thumbFromPath = path__WEBPACK_IMPORTED_MODULE_2___default().join(UPLOAD_DIR, thumbFrom);\n        const thumbToPath = path__WEBPACK_IMPORTED_MODULE_2___default().join(UPLOAD_DIR, thumbTo);\n        console.log('🔄 API SWAP DEBUG - Tentando swap thumbs:', {\n            thumbFrom,\n            thumbTo\n        });\n        try {\n            await fs__WEBPACK_IMPORTED_MODULE_1__.promises.stat(thumbFromPath);\n            await fs__WEBPACK_IMPORTED_MODULE_1__.promises.stat(thumbToPath);\n            const tempThumb = `${thumbFrom}.swap_tmp`;\n            await fs__WEBPACK_IMPORTED_MODULE_1__.promises.rename(thumbFromPath, path__WEBPACK_IMPORTED_MODULE_2___default().join(UPLOAD_DIR, tempThumb));\n            await fs__WEBPACK_IMPORTED_MODULE_1__.promises.rename(thumbToPath, thumbFromPath);\n            await fs__WEBPACK_IMPORTED_MODULE_1__.promises.rename(path__WEBPACK_IMPORTED_MODULE_2___default().join(UPLOAD_DIR, tempThumb), thumbToPath);\n            console.log('✅ API SWAP DEBUG - Swap thumbs concluído');\n        } catch  {\n            console.log('⚠️ API SWAP DEBUG - Thumbs não encontrados ou erro no swap thumbs');\n        }\n        const imagens = await listImages(codigo);\n        console.log('✅ API SWAP DEBUG - Success, retornando imagens:', imagens);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            imagens\n        });\n    } catch (e) {\n        console.log('❌ API SWAP DEBUG - Erro:', e);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: 'Falha swap',\n            detalhe: e.message\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/produtos/[codigo]/imagens/route.ts\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fprodutos%2F%5Bcodigo%5D%2Fimagens%2Froute&page=%2Fapi%2Fprodutos%2F%5Bcodigo%5D%2Fimagens%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fprodutos%2F%5Bcodigo%5D%2Fimagens%2Froute.ts&appDir=C%3A%5CUsers%5Condyd%5CDocuments%5Cretaguarda_new%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Condyd%5CDocuments%5Cretaguarda_new&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fprodutos%2F%5Bcodigo%5D%2Fimagens%2Froute&page=%2Fapi%2Fprodutos%2F%5Bcodigo%5D%2Fimagens%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fprodutos%2F%5Bcodigo%5D%2Fimagens%2Froute.ts&appDir=C%3A%5CUsers%5Condyd%5CDocuments%5Cretaguarda_new%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Condyd%5CDocuments%5Cretaguarda_new&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handler: () => (/* binding */ handler),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/server/request-meta */ \"(rsc)/./node_modules/next/dist/server/request-meta.js\");\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(rsc)/./node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/shared/lib/router/utils/app-paths */ \"next/dist/shared/lib/router/utils/app-paths\");\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/base-http/node */ \"(rsc)/./node_modules/next/dist/server/base-http/node.js\");\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next/dist/server/web/spec-extension/adapters/next-request */ \"(rsc)/./node_modules/next/dist/server/web/spec-extension/adapters/next-request.js\");\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(rsc)/./node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! next/dist/server/instrumentation/utils */ \"(rsc)/./node_modules/next/dist/server/instrumentation/utils.js\");\n/* harmony import */ var next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! next/dist/server/send-response */ \"(rsc)/./node_modules/next/dist/server/send-response.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! next/dist/server/web/utils */ \"(rsc)/./node_modules/next/dist/server/web/utils.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! next/dist/server/lib/cache-control */ \"(rsc)/./node_modules/next/dist/server/lib/cache-control.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! next/dist/lib/constants */ \"(rsc)/./node_modules/next/dist/lib/constants.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! next/dist/shared/lib/no-fallback-error.external */ \"next/dist/shared/lib/no-fallback-error.external\");\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! next/dist/server/response-cache */ \"(rsc)/./node_modules/next/dist/server/response-cache/index.js\");\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var C_Users_ondyd_Documents_retaguarda_new_app_api_produtos_codigo_imagens_route_ts__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./app/api/produtos/[codigo]/imagens/route.ts */ \"(rsc)/./app/api/produtos/[codigo]/imagens/route.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/produtos/[codigo]/imagens/route\",\n        pathname: \"/api/produtos/[codigo]/imagens\",\n        filename: \"route\",\n        bundlePath: \"app/api/produtos/[codigo]/imagens/route\"\n    },\n    distDir: \".next\" || 0,\n    relativeProjectDir:  false || '',\n    resolvedPagePath: \"C:\\\\Users\\\\ondyd\\\\Documents\\\\retaguarda_new\\\\app\\\\api\\\\produtos\\\\[codigo]\\\\imagens\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_ondyd_Documents_retaguarda_new_app_api_produtos_codigo_imagens_route_ts__WEBPACK_IMPORTED_MODULE_16__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\nasync function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/produtos/[codigo]/imagens/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {} else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = false;\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = (0,next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__.normalizeAppPath)(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.getTracer)();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                cacheComponents: Boolean(nextConfig.experimental.cacheComponents),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextRequest(req);\n    const nodeNextRes = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextResponse(res);\n    const nextReq = next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.NextRequestAdapter.fromNodeNextRequest(nodeNextReq, (0,next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.signalFromNodeResponse)(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.toNodeOutgoingHttpHeaders)(response.headers);\n                        if (cacheTags) {\n                            headers[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.fromNodeOutgoingHttpHeaders)(cacheEntry.value.headers);\n            if (!((0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isIsr)) {\n                headers.delete(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', (0,next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__.getCacheControlHeader)(cacheEntry.cacheControl));\n            }\n            await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        // if we aren't wrapped by base-server handle here\n        if (!activeSpan && !(err instanceof next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fprodutos%2F%5Bcodigo%5D%2Fimagens%2Froute&page=%2Fapi%2Fprodutos%2F%5Bcodigo%5D%2Fimagens%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fprodutos%2F%5Bcodigo%5D%2Fimagens%2Froute.ts&appDir=C%3A%5CUsers%5Condyd%5CDocuments%5Cretaguarda_new%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Condyd%5CDocuments%5Cretaguarda_new&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../app-render/action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/server/app-render/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/action-async-storage.external.js");

/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "./work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("fs");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "next/dist/shared/lib/no-fallback-error.external":
/*!******************************************************************!*\
  !*** external "next/dist/shared/lib/no-fallback-error.external" ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/no-fallback-error.external");

/***/ }),

/***/ "next/dist/shared/lib/router/utils/app-paths":
/*!**************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/app-paths" ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/app-paths");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ "sharp":
/*!************************!*\
  !*** external "sharp" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("sharp");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fprodutos%2F%5Bcodigo%5D%2Fimagens%2Froute&page=%2Fapi%2Fprodutos%2F%5Bcodigo%5D%2Fimagens%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fprodutos%2F%5Bcodigo%5D%2Fimagens%2Froute.ts&appDir=C%3A%5CUsers%5Condyd%5CDocuments%5Cretaguarda_new%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Condyd%5CDocuments%5Cretaguarda_new&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!")));
module.exports = __webpack_exports__;

})();