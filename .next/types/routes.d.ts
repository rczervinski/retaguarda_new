// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/cadastros/clientes" | "/cadastros/fornecedores" | "/cadastros/produtos" | "/cadastros/produtos/[codigo]/editar" | "/cadastros/produtos/novo" | "/cadastros/promocoes" | "/cadastros/transportadoras" | "/cadastros/usuarios" | "/cadastros/vendedores" | "/exemplo-grade" | "/financeiro/contas-pagar" | "/financeiro/contas-receber" | "/integracoes/mercadolivre" | "/integracoes/nuvemshop" | "/nfe" | "/orcamento" | "/relatorios/ecommerce" | "/relatorios/produtos" | "/vendas-online"
type AppRouteHandlerRoutes = "/api/categorias" | "/api/fornecedores" | "/api/inspect-produtos" | "/api/produtos" | "/api/produtos-final" | "/api/produtos-new" | "/api/produtos-sql" | "/api/produtos-teste" | "/api/produtos-v2" | "/api/produtos/[codigo]" | "/api/produtos/[codigo]/grade" | "/api/produtos/[codigo]/imagens" | "/api/produtos/buscar-completo" | "/api/produtos/buscar-gtin" | "/api/produtos/buscar-por-gtin" | "/api/produtos/test" | "/api/test-db"
type PageRoutes = never
type LayoutRoutes = "/"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/api/categorias": {}
  "/api/fornecedores": {}
  "/api/inspect-produtos": {}
  "/api/produtos": {}
  "/api/produtos-final": {}
  "/api/produtos-new": {}
  "/api/produtos-sql": {}
  "/api/produtos-teste": {}
  "/api/produtos-v2": {}
  "/api/produtos/[codigo]": { "codigo": string; }
  "/api/produtos/[codigo]/grade": { "codigo": string; }
  "/api/produtos/[codigo]/imagens": { "codigo": string; }
  "/api/produtos/buscar-completo": {}
  "/api/produtos/buscar-gtin": {}
  "/api/produtos/buscar-por-gtin": {}
  "/api/produtos/test": {}
  "/api/test-db": {}
  "/cadastros/clientes": {}
  "/cadastros/fornecedores": {}
  "/cadastros/produtos": {}
  "/cadastros/produtos/[codigo]/editar": { "codigo": string; }
  "/cadastros/produtos/novo": {}
  "/cadastros/promocoes": {}
  "/cadastros/transportadoras": {}
  "/cadastros/usuarios": {}
  "/cadastros/vendedores": {}
  "/exemplo-grade": {}
  "/financeiro/contas-pagar": {}
  "/financeiro/contas-receber": {}
  "/integracoes/mercadolivre": {}
  "/integracoes/nuvemshop": {}
  "/nfe": {}
  "/orcamento": {}
  "/relatorios/ecommerce": {}
  "/relatorios/produtos": {}
  "/vendas-online": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
